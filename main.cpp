/*
Граф представляется двумя способами (матрицей
смежности или весов и списками смежности). Для каждого представления
требуется написать отдельную программу решения задачи, используя
алгоритм, наиболее подходящий для используемой структуры хранения. Для
тестирования программ требуется создать файлы с описанием графа одним
способом (только матрицей или только списками), обе программы должны
уметь заполнять структуры хранения, считывая файлы, как содержащие
матрицы смежности, так и содержащие списки смежных вершин. При выборе
структур хранения руководствоваться требованием разумной экономии
памяти.

 Купцы одного сказочного мира учредили свой ежегодный съезд –
Континентальный Купеческий Конгресс, где обсуждают свои проблемы.
Каждая страна отправляет на съезд по одному делегату, а расходы на
пересечение границ оплачиваются из общей кассы. Посчитайте эти расходы,
если известна страна проведения конгресса, купцы следуют на съезд
маршрутами, на которых количество пересечений границ минимально, но на
каждой границе установлен свой размер пошлины.
 */

#include <iostream>
#include "Graph.h"

int main() {
    Graph graphMatrix;
    Graph<ListGraphs> graphList;

    try {
        // Graph Matrix
        graphMatrix.ReadFile("/home/rskullw/CLionProjects/SIOD/matrix.txt");
        graphMatrix.Log("Print Matrix");

        graphMatrix.PrintGraph();

        graphMatrix.Log("Answer Matrix = " + std::to_string(graphMatrix.PriceDijkstra()));

        //Graph List
        graphList.ReadFile("/home/rskullw/CLionProjects/SIOD/matrix.txt");
//      graphList.Log("Print List");
//
//      graphList.PrintGraph();

        graphList.Log("Answer List = " + std::to_string(graphList.PriceDijkstra()));
    }

    catch(std::string& ex) {
        std::cout << ex << '\n';
    }

    return 0;
}